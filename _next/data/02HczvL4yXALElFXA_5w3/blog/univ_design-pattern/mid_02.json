{"pageProps":{"post":{"title":"Observer Pattern","description":"Observer 디자인 패턴의 필요성과 그 구조에 대해 알아봅니다.","icon":"","image":"","tags":["Design Pattern","Observer Pattern","interface"],"draft":false,"date":"2023-09-11","content":"\n## Strategy Pattern\n\n[**저번 포스트**](https://wjlee611.github.io/blog/univ_design-pattern/mid_01)에서 배운 `Strategy 디자인 패턴`을 이용해서 한 가지 예를 살펴보자.\n\n```java:WeatherData.java {7} showLineNumbers\npublic class WeatherData {\n  public void measurementsChanged() {\n    float temp = getTemperature();\n    float humidity = getHumidity();\n    float pressure = getPressure();\n\n     // 각 장치는 update라는 전략을 사용하는 전략 클래스를 갖고있는 클래스이다.\n    currentConditionsDisplay.update(temp, humidity, pressure);\n    statisticsDisplay.update(temp, humidity, pressure);\n    forecastDisplay.update(temp, humidity, pressure);\n  }\n}\n```\n\n이 코드는 `Display`장치들이 `WeatherData`에서 제공하는 데이터를 이용하려는 코드이다.\n\n예로 들어 `forecastDisplay`에서 날씨 정보를 출력하기 위해서는\n`WeatherData`에서 `forecastDisplay.update()` 메서드를 호출해야\n날씨 정보가 비로소 `forecastDisplay`로 전달되는 것이다.\n\n### 문제점\n\n여기서 문제가 발생한다.\n만약 새로운 장치 futureDisplay를 구현하려면 Strategy Pattern을 사용하는 코드는 아래와 같은 코드수정이 필요해진다.\n\n1. update() 전략을 갖고있는 인터페이스로 구현한 전략(Display) 클래스를 만든다.\n2. `Line 7`에 새로운 장치를 등록한다.\n\n지금 당장은 문제될게 없어 보이지만, 만약 당신이 WeatherData를 `라이브러리화 해서 배포`하는 입장일 경우를 고려해보자.\n`사용자`는 단지 새로운 Display를 추가하여 바로 날씨 정보를 받아오고 싶을 것이다.\n하지만, 위와 같은 코드라면 사용자는 라이브러리 파일을 뜯어서 WeatherData 클래스 내부에\n직접적으로 `새로운 Display를 의존성 주입`을 해줘야만 할 것이다.\n\n이 경우는 꽤나 치명적이다.\n생각해보면 우리가 사용하는 대부분의 라이브러리는 이런 과정을 겪지 않으니 말이다.\n\n따라서 이런 문제를 해결하기 위한 디자인 패턴이 필요하다.\n\n## Observer Pattern\n\nObserver Pattern의 정의는 다음과 같다.\n\n> 객체들이 1:N의 관계를 갖을 때, 한 객체의 상태가 변하면 다른 모든 객체들에 업데이트 통지가 떨어지는 관계로,\n> `객체(Subject)`와 `객체들(Observers)`간의 `종속성이 없는 관계`를 의미한다.\n\n코드로 살펴보며 이해해보자.\n\n### interface\n\n```java:IObserverPattern.java {1-5, 7-9}\npublic interface Subject {\n    public void registerObserver(Observer o);\n    public void removeObserver(Observer o);\n    public void notifyObservers();\n}\n\npublic interface Observer {\n    public void update(ﬂoat temp, ﬂoat humidity, ﬂoat pressure);\n}\n\npublic interface DisplayElement {\n    public void display();\n}\n```\n\n위 코드는 Observer Pattern에서 사용하는 인터페이스이다.\n`1`의 입장인 클래스(Subject)는 `Subject 인터페이스`를 구현해야 하고,\n`N`의 입장인 클래스(Observers)는 `Observer 인터페이스`를 구현해야 한다.\n\n### Subject class\n\n```diff-java:WeatherData.java {24}\n  public class WeatherData implements Subject {\n+   private ArrayList<Observer> observers;\n\n    public WeatherData() {\n      observers = new ArrayList<Observer>();\n    }\n\n+   @implements\n+   public void registerObserver(Observer o) {\n+     observers.add(o);\n+   }\n+\n+   @implements\n+   public void removeObserver(Observer o) {\n+     int i = observers.indexOf(o);\n+     if (i < 0) return;\n+     observers.remove(i);\n+   }\n+\n+   @implements\n+   public void notifyObservers() {\n+     for (int i=0; i<observers.length; i++) {\n+       Observer o = observers.get(i);\n+       o.update(temp, humidity, pressure);\n+     }\n+   }\n\n    public void setMeasurements(float temp, float humidity, float pressure) {\n      this.temp = temp;\n      this.humidity = humidity;\n      this.pressure = pressure;\n      measurementsChanged();\n    }\n\n     // 더이상 WeatherData 클래스는 수정할 일이 없어진다.\n    public void measurementsChanged() {\n+     notifyObservers()\n-     float temp = getTemperature();\n-     float humidity = getHumidity();\n-     float pressure = getPressure();\n-\n-     // 각 장치는 update라는 전략을 사용하는 전략 클래스를 갖고있는 클래스이다.\n-     currentConditionsDisplay.update(temp, humidity, pressure);\n-     statisticsDisplay.update(temp, humidity, pressure);\n-     forecastDisplay.update(temp, humidity, pressure);\n    }\n  }\n```\n\nSubject class의 역할은 Observer의 `구독과 해지`하는 역할을 담당하고,\n구독된 Observers에게 `본인의 변경사항을 알려`주는 역할을 한다.\n\n본인의 변경사항을 알려주기 위해 `Observer는 update 전략`을 포함하고 있어야 한다.\n\n### Observer class\n\n```java:FutureDisplay.java {6-8}\npublic class FutureDisplay implements Observer, DisplayElement {\n  private Subject weatherData;\n\n  public FutureDisplay(Subject weatherData) {\n    this.weatherData = weatherData;\n    // Observer가 Subject를 구독한다.\n    // 비로소 Subject가 update를 쏴줄 수 있다.\n    weatherData .registerObserver(this);\n  }\n\n  public void update(float temp, float humidity, float pressure) {\n    this.temp = temp;\n    this.humidity = humidity;\n    this.pressure = pressure;\n    display();\n  }\n\n  @implements\n  public void display() {\n    // ...\n  }\n}\n```\n\nObserver는 생성시 자동으로 `Subject를 구독`하게 되고,\n구독했기에 Subject의 상태 변경시 자동으로 Observer를 업데이트 할 수 있다.\n\n> 여기서 눈여겨 봐야 할 점은 `Observer의 update` 전략 메서드는 `Subject`에서,\n> `Subject의 register, remove` 전략 메서드는 `Observer`에서 호출된다는 점이다.\n> 서로 `크로스`되어 메서드를 호출한다는 점을 주목하자.\n\n### main (사용자 입장)\n\n```diff-java:WeatherStation.java {5-6}\n  public class WeatherStation {\n    public static void main(String[] args) {\n      WeatherData weatherData = new WeatherData();\n\n      // another displays\n+     FutureDisplay futureDisplay = new FutureDisplay(weatherData);\n\n      weatherData.setMeasurements(80, 65, 30.4f);\n      weatherData.setMeasurements(82, 70, 29.2f);\n      weatherData.setMeasurements(78, 90, 29.3f);\n    }\n  }\n```\n\n사용자 입장에서는 새로운 Display객체 생성시 WeatherData를 의존성 주입만 해주면,\n그 뒤의 모든 과정은 Observer Pattern에 의해 자동으로 업데이트가 가능해진다.\n\n## 결론\n\n`의존성이 없어`야 하지만 `여러 클래스와 관계`를 가져야하고,\n동시에 `코드가 수정되는 일이 적어`야만 하는 클래스는\nObserver Pattern을 그 클리스와 관계를 갖는 여러 클래스에 적용하는 것이 좋다.\n","slug":"univ_design-pattern/mid_02","readingMinutes":7,"wordCount":667},"mdx":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    strong: \"strong\",\n    code: \"code\",\n    div: \"div\",\n    pre: \"pre\",\n    br: \"br\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.h2, {\n      id: \"strategy-pattern\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#strategy-pattern\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Strategy Pattern\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://wjlee611.github.io/blog/univ_design-pattern/mid_01\",\n        children: _jsx(_components.strong, {\n          children: \"저번 포스트\"\n        })\n      }), \"에서 배운 \", _jsx(_components.code, {\n        children: \"Strategy 디자인 패턴\"\n      }), \"을 이용해서 한 가지 예를 살펴보자.\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"WeatherData.java\"\n    }), _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"1\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"WeatherData\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"2\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"measurementsChanged\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"3\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" temp \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getTemperature\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"4\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" humidity \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getHumidity\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"5\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" pressure \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getPressure\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line line-number\",\n          line: \"6\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number highlight-line\",\n          line: \"7\",\n          children: [\"     \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 각 장치는 update라는 전략을 사용하는 전략 클래스를 갖고있는 클래스이다.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"8\",\n          children: [\"    currentConditionsDisplay\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"9\",\n          children: [\"    statisticsDisplay\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"10\",\n          children: [\"    forecastDisplay\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"11\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line line-number\",\n          line: \"12\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"이 코드는 \", _jsx(_components.code, {\n        children: \"Display\"\n      }), \"장치들이 \", _jsx(_components.code, {\n        children: \"WeatherData\"\n      }), \"에서 제공하는 데이터를 이용하려는 코드이다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"예로 들어 \", _jsx(_components.code, {\n        children: \"forecastDisplay\"\n      }), \"에서 날씨 정보를 출력하기 위해서는\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"WeatherData\"\n      }), \"에서 \", _jsx(_components.code, {\n        children: \"forecastDisplay.update()\"\n      }), \" 메서드를 호출해야\", _jsx(_components.br, {}), \"\\n\", \"날씨 정보가 비로소 \", _jsx(_components.code, {\n        children: \"forecastDisplay\"\n      }), \"로 전달되는 것이다.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"문제점\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#문제점\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"문제점\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"여기서 문제가 발생한다.\", _jsx(_components.br, {}), \"\\n\", \"만약 새로운 장치 futureDisplay를 구현하려면 Strategy Pattern을 사용하는 코드는 아래와 같은 코드수정이 필요해진다.\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"update() 전략을 갖고있는 인터페이스로 구현한 전략(Display) 클래스를 만든다.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"Line 7\"\n        }), \"에 새로운 장치를 등록한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"지금 당장은 문제될게 없어 보이지만, 만약 당신이 WeatherData를 \", _jsx(_components.code, {\n        children: \"라이브러리화 해서 배포\"\n      }), \"하는 입장일 경우를 고려해보자.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"사용자\"\n      }), \"는 단지 새로운 Display를 추가하여 바로 날씨 정보를 받아오고 싶을 것이다.\", _jsx(_components.br, {}), \"\\n\", \"하지만, 위와 같은 코드라면 사용자는 라이브러리 파일을 뜯어서 WeatherData 클래스 내부에\", _jsx(_components.br, {}), \"\\n\", \"직접적으로 \", _jsx(_components.code, {\n        children: \"새로운 Display를 의존성 주입\"\n      }), \"을 해줘야만 할 것이다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"이 경우는 꽤나 치명적이다.\", _jsx(_components.br, {}), \"\\n\", \"생각해보면 우리가 사용하는 대부분의 라이브러리는 이런 과정을 겪지 않으니 말이다.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"따라서 이런 문제를 해결하기 위한 디자인 패턴이 필요하다.\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"observer-pattern\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#observer-pattern\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Observer Pattern\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Observer Pattern의 정의는 다음과 같다.\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"객체들이 1:N의 관계를 갖을 때, 한 객체의 상태가 변하면 다른 모든 객체들에 업데이트 통지가 떨어지는 관계로,\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n          children: \"객체(Subject)\"\n        }), \"와 \", _jsx(_components.code, {\n          children: \"객체들(Observers)\"\n        }), \"간의 \", _jsx(_components.code, {\n          children: \"종속성이 없는 관계\"\n        }), \"를 의미한다.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"코드로 살펴보며 이해해보자.\"\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"interface\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#interface\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"interface\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"IObserverPattern.java\"\n    }), _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"interface\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Subject\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"registerObserver\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Observer\"\n          }), \" o\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"removeObserver\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Observer\"\n          }), \" o\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"notifyObservers\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"interface\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Observer\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"ﬂoat temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" ﬂoat humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" ﬂoat pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"interface\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"DisplayElement\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"display\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"위 코드는 Observer Pattern에서 사용하는 인터페이스이다.\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"1\"\n      }), \"의 입장인 클래스(Subject)는 \", _jsx(_components.code, {\n        children: \"Subject 인터페이스\"\n      }), \"를 구현해야 하고,\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n        children: \"N\"\n      }), \"의 입장인 클래스(Observers)는 \", _jsx(_components.code, {\n        children: \"Observer 인터페이스\"\n      }), \"를 구현해야 한다.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"subject-class\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#subject-class\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Subject class\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"WeatherData.java\"\n    }), _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff-java code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"WeatherData\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"implements\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Subject\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"private\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"ArrayList\"\n          }), _jsxs(_components.span, {\n            className: \"token generics\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Observer\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), \" observers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"WeatherData\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      observers \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"ArrayList\"\n          }), _jsxs(_components.span, {\n            className: \"token generics\",\n            children: [_jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \"<\"\n            }), _jsx(_components.span, {\n              className: \"token class-name\",\n              children: \"Observer\"\n            }), _jsx(_components.span, {\n              className: \"token punctuation\",\n              children: \">\"\n            })]\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token annotation punctuation\",\n            children: \"@implements\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"registerObserver\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Observer\"\n          }), \" o\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     observers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"add\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"o\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token annotation punctuation\",\n            children: \"@implements\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"removeObserver\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Observer\"\n          }), \" o\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"int\"\n          }), \" i \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" observers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"indexOf\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"o\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"if\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"i \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"return\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     observers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"remove\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"i\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token annotation punctuation\",\n            children: \"@implements\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"notifyObservers\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"for\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"int\"\n          }), \" i\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"0\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \" i\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"<\"\n          }), \"observers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"length\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \" i\", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"++\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"       \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Observer\"\n          }), \" o \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" observers\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"get\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"i\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"       o\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"   \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"setMeasurements\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"temp \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"humidity \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"pressure \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"measurementsChanged\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"     \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 더이상 WeatherData 클래스는 수정할 일이 없어진다.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"measurementsChanged\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"notifyObservers\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" temp \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getTemperature\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" humidity \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getHumidity\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" pressure \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"getPressure\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 각 장치는 update라는 전략을 사용하는 전략 클래스를 갖고있는 클래스이다.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"     currentConditionsDisplay\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"     statisticsDisplay\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line deleted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"-\"\n          }), \"     forecastDisplay\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Subject class의 역할은 Observer의 \", _jsx(_components.code, {\n        children: \"구독과 해지\"\n      }), \"하는 역할을 담당하고,\", _jsx(_components.br, {}), \"\\n\", \"구독된 Observers에게 \", _jsx(_components.code, {\n        children: \"본인의 변경사항을 알려\"\n      }), \"주는 역할을 한다.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"본인의 변경사항을 알려주기 위해 \", _jsx(_components.code, {\n        children: \"Observer는 update 전략\"\n      }), \"을 포함하고 있어야 한다.\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"observer-class\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#observer-class\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"Observer class\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"FutureDisplay.java\"\n    }), _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-java code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"FutureDisplay\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"implements\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Observer\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"DisplayElement\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"private\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Subject\"\n          }), \" weatherData\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"FutureDisplay\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Subject\"\n          }), \" weatherData\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"weatherData \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" weatherData\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// Observer가 Subject를 구독한다.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// 비로소 Subject가 update를 쏴줄 수 있다.\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"    weatherData \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"registerObserver\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"update\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"float\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"temp \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" temp\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"humidity \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" humidity\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"this\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), \"pressure \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" pressure\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"display\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token annotation punctuation\",\n            children: \"@implements\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"display\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// ...\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [_jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Observer는 생성시 자동으로 \", _jsx(_components.code, {\n        children: \"Subject를 구독\"\n      }), \"하게 되고,\", _jsx(_components.br, {}), \"\\n\", \"구독했기에 Subject의 상태 변경시 자동으로 Observer를 업데이트 할 수 있다.\"]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsxs(_components.p, {\n        children: [\"여기서 눈여겨 봐야 할 점은 \", _jsx(_components.code, {\n          children: \"Observer의 update\"\n        }), \" 전략 메서드는 \", _jsx(_components.code, {\n          children: \"Subject\"\n        }), \"에서,\", _jsx(_components.br, {}), \"\\n\", _jsx(_components.code, {\n          children: \"Subject의 register, remove\"\n        }), \" 전략 메서드는 \", _jsx(_components.code, {\n          children: \"Observer\"\n        }), \"에서 호출된다는 점이다.\", _jsx(_components.br, {}), \"\\n\", \"서로 \", _jsx(_components.code, {\n          children: \"크로스\"\n        }), \"되어 메서드를 호출한다는 점을 주목하자.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h3, {\n      id: \"main-사용자-입장\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#main-사용자-입장\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"main (사용자 입장)\"]\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"rehype-code-title\",\n      children: \"WeatherStation.java\"\n    }), _jsx(_components.pre, {\n      className: \"language-java\",\n      children: _jsxs(_components.code, {\n        className: \"language-diff-java code-highlight\",\n        children: [_jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"WeatherStation\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"public\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"static\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"void\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token function\",\n            children: \"main\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"String\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"[\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"]\"\n          }), \" args\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"{\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"WeatherData\"\n          }), \" weatherData \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"WeatherData\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line\",\n          children: [\"      \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"// another displays\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line highlight-line inserted\",\n          children: [_jsx(_components.span, {\n            className: \"token operator\",\n            children: \"+\"\n          }), \"     \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"FutureDisplay\"\n          }), \" futureDisplay \", _jsx(_components.span, {\n            className: \"token operator\",\n            children: \"=\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"new\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"FutureDisplay\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), \"weatherData\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsx(_components.span, {\n          className: \"code-line\",\n          children: \"\\n\"\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      weatherData\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"setMeasurements\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"80\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"65\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"30.4f\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      weatherData\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"setMeasurements\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"82\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"70\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"29.2f\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"      weatherData\", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \".\"\n          }), _jsx(_components.span, {\n            className: \"token function\",\n            children: \"setMeasurements\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"(\"\n          }), _jsx(_components.span, {\n            className: \"token number\",\n            children: \"78\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"90\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \",\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token number\",\n            children: \"29.3f\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \")\"\n          }), _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \";\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"    \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        }), _jsxs(_components.span, {\n          className: \"code-line\",\n          children: [\"  \", _jsx(_components.span, {\n            className: \"token punctuation\",\n            children: \"}\"\n          }), \"\\n\"]\n        })]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"사용자 입장에서는 새로운 Display객체 생성시 WeatherData를 의존성 주입만 해주면,\", _jsx(_components.br, {}), \"\\n\", \"그 뒤의 모든 과정은 Observer Pattern에 의해 자동으로 업데이트가 가능해진다.\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"결론\",\n      children: [_jsx(_components.a, {\n        className: \"anchor\",\n        href: \"#결론\",\n        children: _jsx(_components.span, {\n          className: \"icon icon-link\"\n        })\n      }), \"결론\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"의존성이 없어\"\n      }), \"야 하지만 \", _jsx(_components.code, {\n        children: \"여러 클래스와 관계\"\n      }), \"를 가져야하고,\", _jsx(_components.br, {}), \"\\n\", \"동시에 \", _jsx(_components.code, {\n        children: \"코드가 수정되는 일이 적어\"\n      }), \"야만 하는 클래스는\", _jsx(_components.br, {}), \"\\n\", \"Observer Pattern을 그 클리스와 관계를 갖는 여러 클래스에 적용하는 것이 좋다.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"toc":[{"slug":"strategy-pattern","text":"Strategy Pattern","subSections":[{"slug":"문제점","text":"문제점"}]},{"slug":"observer-pattern","text":"Observer Pattern","subSections":[{"slug":"interface","text":"interface"},{"slug":"subject-class","text":"Subject class"},{"slug":"observer-class","text":"Observer class"},{"slug":"main-사용자-입장","text":"main (사용자 입장)"}]},{"slug":"결론","text":"결론","subSections":[]}]},"__N_SSG":true}